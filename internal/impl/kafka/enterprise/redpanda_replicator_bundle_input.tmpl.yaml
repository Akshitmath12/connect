# Copyright 2024 Redpanda Data, Inc.
#
# Licensed as a Redpanda Enterprise file under the Redpanda Community
# License (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# https://github.com/redpanda-data/connect/blob/main/licenses/rcl.md

name: redpanda_replicator_bundle
type: input
status: experimental
categories: [ Services ]
summary: Redpanda Replicator bundle input
description: |
  All-in-one input which reads messages and schemas from a Kafka or Redpanda cluster. This input is meant to be used
  together with the `redpanda_replicator_bundle` output.

fields:
  - name: redpanda_replicator
    type: unknown
    kind: map
    description: |
      The `redpanda_replicator` input configuration.

  - name: schema_registry
    type: unknown
    kind: map
    description: |
      The `schema_registry` input configuration.

  - name: replicate_schemas_before_data
    type: bool
    kind: scalar
    default: false
    description: |
      Replicate all schemas first before starting to replicate data.

mapping: |
  #!blobl

  root = if this.redpanda_replicator.length() == 0 || this.schema_registry.length() == 0 {
    throw("both redpanda_replicator and schema_registry inputs must be configured")
  } else {
    # The schema_registry input needs to be set first in case replicate_schemas_before_data is true
    """
      %s:
        inputs:
          - sequence:
              inputs:
                - schema_registry: %s
                  processors:
                    - mapping: meta input_label = "schema_registry"
                - generate:
                    count: 1
                    mapping: root = ""
                  processors:
                    - log:
                        message: Finished importing schemas
                    - mapping: root = deleted()
          - redpanda_replicator: %s
            processors:
              - mapping: meta input_label = "redpanda_replicator"
    """.format(if this.replicate_schemas_before_data { "sequence" } else { "broker" }, this.schema_registry.string(), this.redpanda_replicator.string()).parse_yaml()
  }

tests:
  - name: Replicate both data and schemas simultaneously
    config:
      redpanda_replicator:
        seed_brokers: [ "127.0.0.1:9092" ]
        topics: [ "foobar" ]
      schema_registry:
        url: http://localhost:8081

    expected:
      broker:
        inputs:
          - sequence:
              inputs:
                - processors:
                    - mapping: meta input_label = "schema_registry"
                  schema_registry:
                     url: http://localhost:8081
                - generate:
                    count: 1
                    mapping: root = ""
                  processors:
                    - log:
                        message: Finished importing schemas
                    - mapping: root = deleted()
          - processors:
              - mapping: meta input_label = "redpanda_replicator"
            redpanda_replicator:
              seed_brokers: [ "127.0.0.1:9092" ]
              topics: [ "foobar" ]

  - name: Replicate schemas first
    config:
      redpanda_replicator:
        seed_brokers: [ "127.0.0.1:9092" ]
        topics: [ "foobar" ]
      schema_registry:
        url: http://localhost:8081
      replicate_schemas_before_data: true

    expected:
      sequence:
        inputs:
          - sequence:
              inputs:
                - processors:
                    - mapping: meta input_label = "schema_registry"
                  schema_registry:
                     url: http://localhost:8081
                - generate:
                    count: 1
                    mapping: root = ""
                  processors:
                    - log:
                        message: Finished importing schemas
                    - mapping: root = deleted()
          - processors:
              - mapping: meta input_label = "redpanda_replicator"
            redpanda_replicator:
              seed_brokers:
                - 127.0.0.1:9092
              topics:
                - foobar
